# Generated by Django 2.1.3 on 2019-03-13 17:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('status_payment', models.CharField(choices=[('Aguardando Pagamento do Ticket', 'Aguardando Pagamento do Ticket'), ('Pago', 'Pago'), ('Cancelado', 'Cancelado')], default='Aguardando Pagamento do Ticket', max_length=80, verbose_name='Status do Pagamento')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('seller_was_rewarded', models.BooleanField(default=False, verbose_name='Cambista foi pago?')),
                ('manager_was_rewarded', models.BooleanField(default=False, verbose_name='Gerente foi pago?')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_date', models.DateTimeField(blank=True, null=True)),
                ('reward_status', models.CharField(choices=[('Aguardando Resultados', 'Aguardando Resultados'), ('O apostador foi pago', 'O apostador foi pago'), ('Esse ticket não venceu', 'Esse ticket não venceu'), ('Venceu, Pagar Apostador', 'Venceu, Pagar Apostador'), ('Venceu, não pago', 'Venceu, não pago')], default='Aguardando Resultados', max_length=80, verbose_name='Status do Prêmio')),
            ],
            options={
                'verbose_name': 'Recompensa',
                'verbose_name_plural': 'Recompensas',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(verbose_name='Data da Aposta')),
                ('value', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Valor Apostado')),
                ('visible', models.BooleanField(default=True, verbose_name='Visível?')),
                ('cotations', models.ManyToManyField(related_name='ticket', to='core.Cotation', verbose_name='Cota')),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket', to='ticket.Payment', verbose_name='Pagamento')),
                ('reward', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket', to='ticket.Reward', verbose_name='Recompensa')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'permissions': (('can_validate_payment', 'Can validate user ticket'), ('can_reward', 'Can reward a user')),
            },
        ),
    ]
