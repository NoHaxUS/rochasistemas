# Generated by Django 2.1.2 on 2018-10-16 14:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cotation',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, verbose_name='Nome da Cota')),
                ('start_price', models.DecimalField(decimal_places=2, default=0, max_digits=30, verbose_name='Valor Original')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=30, verbose_name='Valor Modificado')),
                ('settlement', models.IntegerField(blank=True, choices=[(-1, 'Cancelada'), (1, 'Perdeu'), (2, 'Ganhou'), (3, 'Reembolso'), (4, 'Metade Perdida'), (3, 'Metade Ganha')], null=True)),
                ('status', models.IntegerField(choices=[(1, 'Em aberto'), (2, 'Suspensa'), (3, 'Finalizada')])),
                ('line', models.CharField(blank=True, max_length=30, null=True)),
                ('base_line', models.CharField(blank=True, max_length=30, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Cota',
                'verbose_name_plural': 'Cotas',
            },
        ),
        migrations.CreateModel(
            name='CotationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_cotation', models.IntegerField()),
                ('name', models.CharField(max_length=80, verbose_name='Nome da Cota')),
                ('original_value', models.DecimalField(decimal_places=2, default=0, max_digits=30, verbose_name='Valor Original')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=30, verbose_name='Valor Modificado')),
                ('winning', models.NullBooleanField(verbose_name='Vencedor ?')),
                ('is_standard', models.BooleanField(default=False, verbose_name='Cota Padrão ?')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Nome do Jogo')),
                ('start_date', models.DateTimeField(verbose_name='Início da Partida')),
                ('game_status', models.IntegerField(choices=[(1, 'Não Iniciado'), (2, 'Ao Vivo'), (3, 'Terminado'), (4, 'Cancelado'), (5, 'Adiado'), (6, 'Interrompindo'), (7, 'Abandonado'), (8, 'Pré-jogo')], verbose_name='Status do Jogo')),
                ('last_update', models.DateTimeField(verbose_name='Ultima Atualização')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visível?')),
            ],
            options={
                'verbose_name': 'Jogo',
                'verbose_name_plural': 'Jogos',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Campeonato', max_length=120, verbose_name='Nome')),
                ('priority', models.IntegerField(default=1, verbose_name='Prioridade')),
            ],
            options={
                'verbose_name': 'Liga',
                'verbose_name_plural': 'Ligas',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Local')),
                ('priority', models.IntegerField(default=1, verbose_name='Prioridade')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tipo de Aposta')),
            ],
            options={
                'verbose_name': 'Tipo de Aposta',
                'verbose_name_plural': 'Tipo de Aposta',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_payment', models.CharField(choices=[('Aguardando Pagamento do Ticket', 'Aguardando Pagamento do Ticket'), ('Pago', 'Pago')], default='Aguardando Pagamento do Ticket', max_length=80, verbose_name='Status do Pagamento')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('seller_was_rewarded', models.BooleanField(default=False, verbose_name='Cambista foi pago?')),
                ('manager_was_rewarded', models.BooleanField(default=False, verbose_name='Gerente foi pago?')),
                ('who_set_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.Seller', verbose_name='Cambista')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.IntegerField(choices=[(10, 'Primeiro Tempo'), (20, 'Segundo Tempo'), (30, 'Primeiro Tempo (Prorrogacao)'), (35, 'Segundo Tempo (Prorrogacao)'), (50, 'Penaltis'), (100, 'Termino'), (101, 'Termino (Prorrogacao)'), (102, 'Termino (Penaltis')])),
                ('is_fineshed', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('home_score', models.IntegerField(default=0)),
                ('away_score', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='core.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=50)),
                ('status_reward', models.CharField(choices=[('Aguardando Resultados', 'Aguardando Resultados'), ('O apostador foi pago', 'O apostador foi pago'), ('Esse ticket não venceu', 'Esse ticket não venceu'), ('Venceu, Pagar Apostador', 'Venceu, Pagar Apostador'), ('Venceu e não foi pago', 'Venceu e não foi pago')], default='Aguardando Resultados', max_length=80, verbose_name='Status do Prêmio')),
                ('who_rewarded', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.Seller')),
            ],
            options={
                'verbose_name': 'Recompensa',
                'verbose_name_plural': 'Recompensas',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(verbose_name='Data da Aposta')),
                ('value', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Valor Apostado')),
                ('bet_ticket_status', models.CharField(choices=[('Aguardando Resultados', 'Aguardando Resultados'), ('Não Venceu', 'Não Venceu'), ('Venceu', 'Venceu'), ('Venceu e não foi pago', 'Venceu e não foi pago'), ('Cancelado', 'Cancelado')], default='Aguardando Resultados', max_length=80, verbose_name='Status de Ticket')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visível?')),
                ('cotations', models.ManyToManyField(related_name='bet_ticket', to='core.Cotation', verbose_name='Cota')),
                ('normal_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.NormalUser', verbose_name='Cliente')),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket', to='core.Payment', verbose_name='Pagamento')),
                ('reward', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket', to='core.Reward', verbose_name='Recompensa')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_created_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Cambista')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_bet_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Apostador')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'permissions': (('can_validate_payment', 'Can validate user ticket'), ('can_reward', 'Can reward a user')),
            },
        ),
        migrations.AddField(
            model_name='game',
            name='league',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_games', to='core.League', verbose_name='Liga'),
        ),
        migrations.AddField(
            model_name='game',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_games', to='core.Location', verbose_name='Local'),
        ),
        migrations.AddField(
            model_name='game',
            name='sport',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_games', to='core.Sport', verbose_name='Esporte'),
        ),
        migrations.AddField(
            model_name='cotationhistory',
            name='bet_ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotations_history', to='core.Ticket', verbose_name='Ticket'),
        ),
        migrations.AddField(
            model_name='cotationhistory',
            name='game',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotations_history', to='core.Game', verbose_name='Jogo'),
        ),
        migrations.AddField(
            model_name='cotationhistory',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotations_history', to='core.Market', verbose_name='Tipo da Cota'),
        ),
        migrations.AddField(
            model_name='cotation',
            name='game',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotations', to='core.Game', verbose_name='Jogo'),
        ),
        migrations.AddField(
            model_name='cotation',
            name='market',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cotations', to='core.Market', verbose_name='Tipo da Cota'),
        ),
    ]
